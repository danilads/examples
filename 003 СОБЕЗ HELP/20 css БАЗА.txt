// ------------------------------
// --- [ВЕС СЕЛЕКТОРОВ]
// ------------------------------
Теговые (элементные)
p { color: red; }
Вес: 0-0-0-1

Классовые
.box { color: blue; }
Вес: 0-0-1-0

ID-селекторы
#header { color: green; }
Вес: 0-1-0-0

Универсальный селектор *
* { margin: 0; }
Вес: 0-0-0-0

Комбинированные селекторы
div.box { color: purple; }   /* тег + класс */
Вес: 0-0-1-1 (класс + тег)

Атрибутные
input[type="text"] { color: orange; }
Вес: 0-0-1-0

Псевдоклассы
a:hover { color: pink; } // focus // checked
Вес: 0-0-1-1

Псевдоэлементы
p::first-line { font-weight: bold; } // ::after // ::before // ::cue // ::first-letter
Вес: 0-0-0-2

!important перебивает любой вес


// ------------------------------
// --- [POSITION]
// ------------------------------

static (по умолчанию)
Элемент располагается в обычном потоке документа.
Свойства top, right, bottom, left не работают.

relative
Элемент остаётся в общем потоке, но его можно сместить относительно собственного исходного положения с помощью top, left и др.
На его "старом месте" остаётся пространство.


absolute
Элемент вынимается из потока документа, соседние элементы его не "замечают".
Смещается относительно ближайшего родителя с position: relative|absolute|fixed|sticky. Если такого нет — относительно окна браузера.

fixed
Элемент всегда остаётся на одном месте при прокрутке страницы.
Позиционируется относительно окна браузера.

sticky
Элемент ведёт себя как relative, пока не достигнет заданного положения (например, top: 0), после чего "прилипает" и ведёт себя как fixed.




// ------------------------------
// --- [DISPLAY]
// ------------------------------


block
Элемент занимает всю ширину родителя.
Начинается с новой строки.
Можно задавать width, height, margin, padding.
Примеры: <div>, <p>, <h1>.

inline
Элемент не разрывает строку.
Занимает только ширину содержимого.
Нельзя задать width и height.
Примеры: <span>, <a>, <strong>.

inline-block
Как inline — не переносит строку.
Как block — можно задавать размеры и внешние отступы.

flex
Включает flex-контейнер для детей.
Дети становятся flex-элементами, можно управлять их выравниванием, порядком, размером (justify-content, align-items, flex-grow и т. д.).

grid
Создаёт grid-контейнер.
Дети располагаются по сетке (grid-template-columns, grid-template-rows, gap).

inline-flex / inline-grid
Работают как flex и grid, но сами ведут себя как inline-элементы.

none
Элемент полностью исчезает из документа (не занимает места).

Отличается от visibility: hidden, где место сохраняется.