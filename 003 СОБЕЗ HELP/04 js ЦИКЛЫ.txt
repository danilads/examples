

reduce(acc, current, ind) 
// 1
const sum = arr.reduce((acc, curr, ind) => {
  console.log('acc:', acc, 'curr:', curr);
  return acc + curr;
}, 0); <----------------

// отработает с ind 0
// первый раз acc - 0
// след итерации - acc то что было в return

// 2
const sum = arr.reduce((acc, curr, ind) => {
  console.log('acc:', acc, 'curr:', curr);
  return acc + curr;
}); <----------------

// отработает с ind 1
// первый раз acc - первое значение
// след итерации - acc то что было в return




// (element, index, array)
forEach(fn) — пройтись по всем элементам.

map(fn) — создать новый массив из результатов функции.

filter(fn) — оставить только те элементы, что прошли условие.

some(fn) — true, если хотя бы один элемент удовлетворяет условию.

every(fn) - true, если все  элементы удовлетворяет условию.




for (let i = 0; i < 5; i++) {
  console.log(i); // 0,1,2,3,4
}
// break;


while (i < 5) {
  console.log(i);
  i++;
}


do {
  console.log(i);
  i++;
} while (i < 5);


const obj = {a: 1, b: 2, c: 3};
for (let key in obj) {
  console.log(key, obj[key]);
}
// break;


const arr = ['a', 'b', 'c'];
for (let value of arr) {
  console.log(value);
}
// break;