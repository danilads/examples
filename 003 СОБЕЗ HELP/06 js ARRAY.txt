// Добавление/удаление элементов

arr.push(...items) – добавляет в конец.

arr.pop() – удаляет последний.

arr.unshift(...items) – добавляет в начало.

arr.shift() – удаляет первый.


arr.splice(4, 1); - удалить по индексу
arr.splice(2, 0, 3); - вставить элемент по индексу



// Создание новых массивов


arr.concat(arr2) – объединяет.

arr.slice(start?, end?) – вернет часть массива



//  Поиск элементов

arr.indexOf(it) — индекс первого элеметна

arr.lastIndexOf(el) — индекс последнего совпадения.

arr.includes(el) — есть ли элемент в массиве (true/false).


arr.find(it => it.it === 8) — найти элемент по условию (например для [{}] )

arr.findIndex(it => it.it === 8) — найти индекс элемента по условию (например для [{}] )


// Сортировка/реверс

arr.sort(compareFn?) – сортировка (a, b) => a.it > b.it

arr.reverse() – меняет порядок на обратный.


// Строковые представления

arr.join(separator?) – объединяет элементы в строку.


// swap

[arr[i], arr[j]] = [arr[j], arr[i]];


// Глубокое Копирование - рукурсивную функцию
function deepClone(obj) {
  if (obj === null || typeof obj !== 'object') return obj;

  if (obj instanceof Date) return new Date(obj);
  if (Array.isArray(obj)) return obj.map(deepClone);

  const clone = {};
  for (let key in obj) {
    if (obj.hasOwnProperty(key)) {
      clone[key] = deepClone(obj[key]);
    }
  }
  return clone;
}