{   
    "parser": "babel-eslint",
    "extends": "airbnb",
    "env": {
        "browser": true // чтобы eslint не ругался на объекты documnet window и т.д.
    },
    "settings": {
        "import/resolver": "webpack" //нужен "eslint-import-resolver-webpack" для того чтобы можно было импортировать из webpack'а
    },
    "rules": {

        // в самом файле можно вставаить 
        // /* eslint import/no-unresolved: [2, { ignore: ['config'] }] */
        // import { backendServiceHost } from 'config';

        "react/state-in-constructor": 0, //чтобы можно было объявлять state вне конструктора
        
        "arrow-body-style": 0, // отключаем стилизцаию стрелочных функций
        "arrow-parens": 0, // отключаем стилизцаия аргументов в стрелочной функции const c = e => {}
        
        "react/jsx-curly-brace-presence": ["error", { "props": "always"}], //все пропсы должны быть обернуты в {}

        "react/jsx-tag-spacing": ["error", {"closingSlash": "never","beforeSelfClosing": "never","afterOpening": "never","beforeClosing": "never"}], //пробелы перед закрытием тэга < />

        //нельзя ставить запятую после последнего аргумента func(arr,str,)
        "comma-dangle": ["error", {
            "arrays": "never",
            "objects": "never",
            "imports": "never",
            "exports": "never",
            "functions": "never"
        }],

        "react/static-property-placement": 0, //разрешаем декларировать propTypes и др. внтури класса
        "react/require-default-props": 0, //разрешаем использовать propTypes без defaultProps

        "react/jsx-fragments": ["error", "element"], //разрешаем писать Fragment или React.Fragment
        "react/jsx-props-no-spreading": 0, // разрешаем использовать "спрэд"

        "no-shadow": 0, //позволяет переделкарировать переменные с таким же именем

        "brace-style": ["error", "stroustrup"], //стиль скобок if(){} / else{}

        "import/prefer-default-export": 0, //разрешает делать экспорт без испрользвания default

        "no-restricted-syntax": 0, //разрешаем использовать все ( даннай настройкой можно заблокировать for of/ for in итд ["error", "ForInStatement", "ForOfStatement"])

        "no-console": "off", //разрешает оставлять консоль логи
    }
}